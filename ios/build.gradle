import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'kotlin-platform-native'

 sourceSets {
     main {
         //kotlin.srcDir '../common/src/main/kotlin'
         component {
             outputKinds = [FRAMEWORK]
             target 'ios_arm64', 'ios_x64'
             baseName = "KotlinChartDataParser"
         }
     }
     test.component {
         target 'ios_x64', 'ios_arm64'
     }
 }


dependencies {
    implementation "org.jetbrains.kotlinx:jsonparser-native:${serializationPluginVersion}"
    expectedBy project(':common')
}

task copyDebugArmFramework(type: Copy) {
    from "${buildDir}/lib/main/debug/ios_arm64/KotlinChartDataParser.framework"
    into "${buildDir}/lib/main/debug/universal/KotlinChartDataParser.framework"
}

task copyReleaseArmFramework(type: Copy) {
    from "${buildDir}/lib/main/release/ios_arm64/KotlinChartDataParser.framework"
    into "${buildDir}/lib/main/release/universal/KotlinChartDataParser.framework"
}

task buildUniversalFramework() {
    group 'build'
    description 'Create a universal framework from x86 and ARM framework'

    doFirst {
        def debugDir = file("${project.buildDir}/lib/main/debug/universal")
        def releaseDir = file("${project.buildDir}/lib/main/release/universal")
        debugDir.mkdirs()
        releaseDir.mkdirs()
    }

    doLast {
        if (Os.isFamily(Os.FAMILY_MAC)) {
            println 'Creating debug framework'
            exec {
                executable "sh"
                args "-c","lipo -create -output " +
                        "${project.buildDir}/lib/main/debug/universal/KotlinChartDataParser.framework/KotlinChartDataParser " +
                        "${project.buildDir}/lib/main/debug/ios_x64/KotlinChartDataParser.framework/KotlinChartDataParser " +
                        "${project.buildDir}/lib/main/debug/ios_arm64/KotlinChartDataParser.framework/KotlinChartDataParser"
            }
            println 'Creating release framework'
            exec {
                executable "sh"
                args "-c","lipo -create -output " +
                        "${project.buildDir}/lib/main/release/universal/KotlinChartDataParser.framework/KotlinChartDataParser " +
                        "${project.buildDir}/lib/main/release/ios_x64/KotlinChartDataParser.framework/KotlinChartDataParser " +
                        "${project.buildDir}/lib/main/release/ios_arm64/KotlinChartDataParser.framework/KotlinChartDataParser"
            }
        } else {
            println "Universal framework creation it's only available on OSX systems"
        }

    }
}

task packageDistribution(type: Zip) {
    archiveName = "KotlinChartDataParser.zip"
    destinationDir = file("${buildDir}/dist")

    from "${buildDir}/lib/main/release/universal/KotlinChartDataParser.framework"
}

buildUniversalFramework.dependsOn copyDebugArmFramework, copyReleaseArmFramework
build.dependsOn buildUniversalFramework
build.dependsOn packageDistribution
