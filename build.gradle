buildscript {
    ext.kotlin_version = property('kotlin.version')
    ext.serialization_version = property('plugin.version')
    ext.serializationRepo = "https://dl.bintray.com/kotlin/kotlinx/"
    ext.serializationPluginVersion = property('plugin.version')
    ext.kotlinx_coroutines_version='0.25.0'
    ext.kotlinx_io_version='0.1.0-dev-15'
    ext.konanVersion = property('konan.version')

    repositories {
        google()
        jcenter()
        mavenCentral()
        maven { url "https://kotlin.bintray.com/kotlinx" }
        maven { url "https://dl.bintray.com/jetbrains/kotlin-native-dependencies" }
        maven { url serializationRepo }
    }

    dependencies {
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4.0.1"
        classpath 'com.android.tools.build:gradle:3.2.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlinx:kotlinx-gradle-serialization-plugin:$serialization_version"
        classpath "org.jetbrains.kotlin:kotlin-native-gradle-plugin:${konanVersion}"
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:3.1.1"
        classpath "org.jetbrains.kotlinx:kotlinx-gradle-serialization-plugin:$serialization_version"
    }
}

task build {
    subprojects.each {
        dependsOn("${it.path}:build")
    }
}

task clean {
    subprojects.each {
        dependsOn("${it.path}:clean")
    }
}

allprojects {

    repositories {
        google()
        jcenter()
        mavenCentral()
        maven { url "https://kotlin.bintray.com/kotlinx" }
        maven { url serializationRepo }
    }

    ext.packageName = "com.oracle.crossparser"
    ext.versionMajor = 1
    ext.versionMinor = 0
    ext.versionPatch = 0
    ext.ciVersion = System.getenv("BUILD_NUMBER") as Integer ?: 0
    ext.isSnapshot = System.getenv("IS_RELEASE") as boolean ?: true
    ext.libraryVersion = ciVersion > 0 ?
            "${versionMajor}.${versionMinor}.${versionPatch}_${ciVersion}" :
            "${versionMajor}.${versionMinor}.${versionPatch}"
    if (isSnapshot) {
        libraryVersion = libraryVersion + "-SNAPSHOT"
    }
}